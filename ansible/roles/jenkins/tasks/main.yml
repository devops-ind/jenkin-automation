---
- name: Create Jenkins Network
  community.docker.docker_network:
    name: jenkins-network
    driver: bridge

- name: Create Jenkins Home Volume
  community.docker.docker_volume:
    name: jenkins_home
    driver: local

- name: Create Jenkins Agent DIND Workspace Volume
  community.docker.docker_volume:
    name: jenkins_agent_dind_workspace
    driver: local

- name: Create Jenkins Docker Data Volume
  community.docker.docker_volume:
    name: jenkins_docker_data
    driver: local

- name: Create Jenkins Shared Workspace Volume
  community.docker.docker_volume:
    name: jenkins_shared_workspace
    driver: local

- name: Deploy Jenkins Master
  community.docker.docker_container:
    name: jenkins-master
    image: "{{ harbor_registry_url }}/{{ jenkins_master_image_name }}:{{ jenkins_master_image_tag }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ jenkins_master_port }}:8080"
      - "{{ jenkins_agent_port }}:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins/master/jcasc:/var/jenkins_home/casc_configs:ro
    networks:
      - name: jenkins-network
    env:
      JENKINS_ADMIN_ID: "{{ jenkins_admin_user }}"
      JENKINS_ADMIN_PASSWORD: "{{ jenkins_admin_password }}"
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false -Xmx{{ jenkins_master_memory }} -Xms{{ jenkins_master_memory_min }}"
      JENKINS_OPTS: "--httpPort=8080"
      JENKINS_SLAVE_AGENT_PORT: "{{ jenkins_agent_port }}"
      CASC_JENKINS_CONFIG: "/var/jenkins_home/casc_configs"
      DOCKER_HOST: "unix:///var/run/docker.sock"

- name: Install Jenkins Job Builder
  pip:
    name: jenkins-job-builder
    state: present

- name: Create Jenkins Pipeline Jobs
  jenkins_job:
    config: "{{ lookup('file', '{{ item.path }}') }}"
    name: "{{ item.name }}"
    user: "{{ jenkins_admin_user }}"
    password: "{{ jenkins_admin_password }}"
    url: "http://localhost:{{ jenkins_master_port }}"
  with_items:
    - { name: 'build-images', path: 'jenkins/pipelines/build-images.groovy' }
    - { name: 'backup', path: 'jenkins/pipelines/backup.groovy' }

- name: Deploy Jenkins SSH Agent
  community.docker.docker_container:
    name: jenkins-agent-ssh
    image: jenkinsci/ssh-agent
    state: started
    restart_policy: unless-stopped
    privileged: yes
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_agent_dind_workspace:/home/jenkins/agent
      - jenkins_docker_data:/var/lib/docker
      - jenkins_shared_workspace:/shared/workspace
    networks:
      - name: jenkins-network
    depends_on:
      - jenkins-master
    env:
      JENKINS_AGENT_SSH_PUBKEY: "{{ jenkins_agent_ssh_pubkey }}"