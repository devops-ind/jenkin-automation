# Jenkins Configuration as Code (JCasC)
# Generated by Ansible for {{ deployment_mode }} deployment

jenkins:
  systemMessage: "Jenkins Master - {{ deployment_mode | title }} Deployment\nConfigured via Ansible + JCasC"
  
  # No executors on master - use agents only
  numExecutors: 0
  
  # Security configuration
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "{{ jenkins_admin_user }}"
          password: "{{ jenkins_admin_password }}"

  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Jenkins administrators"
            permissions:
              - "Overall/Administer"
            assignments:
              - "{{ jenkins_admin_user }}"
          - name: "developer"
            description: "Developers with build permissions"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Cancel"
              - "Job/Read"
              - "Job/Workspace"
              - "View/Read"
            assignments:
              - "authenticated"

  # Permanent SSH agent
  nodes:
    - permanent:
        name: "permanent-ssh-agent"
        remoteFS: "/home/jenkins/agent"
        launcher:
          ssh:
            credentialsId: "jenkins-agent-ssh-key"
            host: "jenkins-agent-ssh"
            port: 22
            sshHostKeyVerificationStrategy: "nonVerifying"
  credentials:
    system:
      domainCredentials:
        - credentials:
            - basicSSHUserPrivateKey:
                scope: SYSTEM
                id: "jenkins-agent-ssh-key"
                username: "jenkins"
                privateKeySource:
                  directEntry:
                    privateKey: "{{ jenkins_agent_ssh_private_key }}"

  # Global environment variables
  globalNodeProperties:
    - envVars:
        env:
          - key: "DOCKER_HOST"
            value: "{{ docker_host }}"
          - key: "DEPLOYMENT_MODE"
            value: "{{ deployment_mode }}"

  # Docker Cloud for dynamic agents
  clouds:
    - docker:
        name: "docker-cloud-{{ deployment_mode }}"
        dockerApi:
          dockerHost:
            uri: "{{ docker_host }}"
        templates:
{% for agent_name, agent_config in jenkins_dynamic_agents.items() %}
          # {{ agent_name | title }} dynamic agent
          - labelString: "{{ agent_config.labels }}"
            dockerTemplateBase:
              image: "{{ agent_config.image }}"
              mounts:
{% for mount in agent_config.mounts %}
                - "{{ mount }}"
{% endfor %}
              environmentsString: |
{% for env_key, env_value in agent_config.environment.items() %}
                {{ env_key }}={{ env_value }}
{% endfor %}
                JENKINS_AGENT_WORKDIR=/home/jenkins/agent
                DEPLOYMENT_MODE={{ deployment_mode }}
            remoteFs: "/home/jenkins/agent"
            connector:
              jnlp:
                jenkinsUrl: "http://jenkins-master-{{ deployment_mode }}:8080"
            instanceCapStr: "{{ agent_config.instance_cap }}"
            retentionStrategy:
              idleMinutes: {{ agent_config.idle_minutes }}
            removeVolumes: true
            pullStrategy: PULL_LATEST

{% endfor %}

# Global tool configurations
tool:
  maven:
    installations:
      - name: "Maven-3.9"
        home: "/opt/maven"
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.9.4"

  git:
    installations:
      - name: "Default Git"
        home: "git"

  jdk:
    installations:
      - name: "OpenJDK-11"
        home: "/opt/java/openjdk"
        properties:
          - installSource:
              installers:
                - adoptOpenJdkInstaller:
                    id: "jdk-11.0.16+8"

# Additional configurations
unclassified:
  # Email configuration
  mailer:
    defaultSuffix: "@{{ ansible_domain | default('company.com') }}"
    smtpHost: "{{ smtp_host | default('localhost') }}"
    smtpPort: "{{ smtp_port | default('25') }}"

  # Pipeline configuration for performance
  globalDefaultFlowDurabilityLevel:
    durabilityHint: PERFORMANCE_OPTIMIZED

  # Git global configuration
  gitSCM:
    globalConfigName: "Jenkins ({{ deployment_mode }})"
    globalConfigEmail: "jenkins@{{ ansible_domain | default('company.com') }}"