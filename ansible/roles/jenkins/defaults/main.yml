# Jenkins Role Default Variables

# Deployment configuration
deployment_mode: "{{ lookup('env', 'DEPLOYMENT_MODE') | default('local') }}"
deployment_type: container  # Always using containers now

# Jenkins installation paths
jenkins_home_dir: "{{ deployment_mode == 'local' and '/workspace/jenkins-deploy' or '/opt/jenkins' }}"
jenkins_user: "{{ deployment_mode == 'local' and 'ansible' or 'jenkins' }}"
jenkins_group: "{{ deployment_mode == 'local' and 'ansible' or 'jenkins' }}"

# Jenkins master configuration
jenkins_version: "2.401.3-lts"
jenkins_master_port: 8080
jenkins_agent_port: 50000
jenkins_host: "{{ deployment_mode == 'local' and 'localhost' or ansible_host }}"

# Jenkins admin configuration
jenkins_admin_user: "{{ lookup('env', 'JENKINS_ADMIN_USER') | default('admin') }}"
jenkins_admin_password: "{{ lookup('env', 'JENKINS_ADMIN_PASSWORD') | default('admin123') }}"

# Jenkins memory settings
jenkins_master_memory: "{{ deployment_mode == 'local' and '2g' or '4g' }}"
jenkins_master_memory_min: "{{ deployment_mode == 'local' and '1g' or '2g' }}"

# Docker configuration
docker_host: "unix:///var/run/docker.sock"
jenkins_network_subnet: "172.20.0.0/24"

# Build and deployment options
jenkins_force_rebuild: false
jenkins_pull_images: false
jenkins_wait_for_ready: true
create_jenkins_user: true

# Corporate domain configuration
jenkins_domain: "{{ lookup('env', 'JENKINS_DOMAIN') | default('jenkins.company.local') }}"
jenkins_base_domain: "{{ lookup('env', 'BASE_DOMAIN') | default('company.local') }}"

# SSL/TLS configuration
jenkins_ssl_enabled: "{{ deployment_mode == 'remote' or lookup('env', 'JENKINS_SSL_ENABLED') | default('false') | bool }}"
jenkins_generate_self_signed: "{{ deployment_mode == 'local' or lookup('env', 'JENKINS_GENERATE_SELF_SIGNED') | default('true') | bool }}"
jenkins_ssl_cert_source_path: "{{ lookup('env', 'JENKINS_SSL_CERT_PATH') | default('/opt/corporate-certs') }}"

# HAProxy configuration
haproxy_version: "2.8"
haproxy_http_port: 80
haproxy_https_port: 443
haproxy_stats_port: 8404
haproxy_stats_uri: "/stats"
haproxy_stats_user: "admin"
haproxy_stats_password: "{{ lookup('env', 'HAPROXY_STATS_PASSWORD') | default('admin123') }}"
haproxy_stats_auth_enabled: true
haproxy_health_port: 8405
haproxy_admin_enabled: false

# SSL certificate paths for HAProxy
haproxy_ssl_cert_path: "/etc/ssl/certs"
haproxy_ssl_dhparam_path: "/etc/ssl/certs/dhparam.pem"

# Jenkins backend servers for HAProxy load balancing
jenkins_backend_servers:
  - name: "jenkins-master-01"
    address: "jenkins-master"
    port: 8080
    weight: 100
    backup: false

# Plugin configuration
jenkins_plugins:
  - "ant:latest"
  - "build-timeout:latest"
  - "credentials-binding:latest"
  - "timestamper:latest"
  - "ws-cleanup:latest"
  - "workflow-aggregator:latest"
  - "pipeline-stage-view:latest"
  - "git:latest"
  - "github:latest"
  - "github-branch-source:latest"
  - "docker-plugin:latest"
  - "docker-workflow:latest"
  - "docker-commons:latest"
  - "pipeline-maven:latest"
  - "pipeline-utility-steps:latest"
  - "maven-plugin:latest"
  - "python:latest"
  - "junit:latest"
  - "htmlpublisher:latest"
  - "matrix-auth:latest"
  - "role-strategy:latest"
  - "email-ext:latest"
  - "configuration-as-code:latest"
  - "envinject:latest"
  - "copyartifact:latest"


# Static DIND agent configuration
jenkins_dind_agent:
  name: "dind-agent"
  labels: "dind docker-manager static privileged"
  executors: 2
  workspace: "/home/jenkins/agent"