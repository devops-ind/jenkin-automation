# Jenkins DIND (Docker-in-Docker) Agent
# Specialized agent for managing dynamic nodes and Docker operations

FROM jenkins/inbound-agent:latest

# Switch to root to install Docker and configure DIND
USER root

# Install Docker and Docker Compose
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release \
    git \
    wget \
    unzip \
    python3 \
    python3-pip \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Add Docker's official GPG key and repository
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker CE
RUN apt-get update && apt-get install -y \
    docker-ce \
    docker-ce-cli \
    containerd.io \
    docker-buildx-plugin \
    docker-compose-plugin \
    && rm -rf /var/lib/apt/lists/*

# Install Docker Compose (standalone)
RUN curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" \
    -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose

# Install additional tools for container management
RUN pip3 install --no-cache-dir \
    docker \
    docker-compose \
    requests \
    pyyaml

# Add jenkins user to docker group
RUN usermod -a -G docker jenkins

# Create Docker daemon configuration for DIND
RUN mkdir -p /etc/docker
RUN echo '{\n  "storage-driver": "overlay2",\n  "hosts": ["unix:///var/run/docker.sock", "tcp://0.0.0.0:2376"],\n  "tls": false\n}' > /etc/docker/daemon.json

# Create directories and set permissions
RUN mkdir -p /home/jenkins/agent /var/lib/docker \
    && chown -R jenkins:jenkins /home/jenkins \
    && chmod 755 /var/lib/docker

# Copy corporate certificates if they exist
COPY certificates/*.crt /usr/local/share/ca-certificates/ 2>/dev/null || true
RUN update-ca-certificates

# Switch back to jenkins user
USER jenkins

# Set up shell environment with Docker shortcuts
RUN echo 'alias ll="ls -la"' >> ~/.bashrc \
    && echo 'alias d="docker"' >> ~/.bashrc \
    && echo 'alias dc="docker compose"' >> ~/.bashrc \
    && echo 'alias dps="docker ps --format \"table {{.Names}}\t{{.Status}}\t{{.Ports}}\""' >> ~/.bashrc \
    && echo 'alias dpsa="docker ps -a --format \"table {{.Names}}\t{{.Status}}\t{{.Ports}}\""' >> ~/.bashrc \
    && echo 'alias dimages="docker images --format \"table {{.Repository}}\t{{.Tag}}\t{{.Size}}\""' >> ~/.bashrc

# Set working directory
WORKDIR /home/jenkins/agent

# Environment variables for DIND operations
ENV DOCKER_HOST=unix:///var/run/docker.sock
ENV JENKINS_AGENT_WORKDIR=/home/jenkins/agent
ENV DOCKER_BUILDKIT=1
ENV COMPOSE_DOCKER_CLI_BUILD=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD pgrep -f "jenkins-agent" && docker version || exit 1

# Default entrypoint from parent image
ENTRYPOINT ["/usr/local/bin/jenkins-agent"]